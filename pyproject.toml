[project]
name = "unlook-sdk"
version = "2.0.0"
description = "SDK for Unlook 3D structured light scanning system"
readme = "README.md"
requires-python = ">=3.7"
authors = [
    {name = "Unlook Team", email = "team@unlook.com"},
]
maintainers = [
    {name = "Unlook Team", email = "team@unlook.com"},
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Image Recognition",
    "Topic :: Multimedia :: Graphics :: 3D Modeling",
]
dependencies = [
    "numpy>=1.19.0",
    "opencv-python>=4.5.0",
    "pyzmq>=22.0.0",
    "pillow>=8.0",
    "matplotlib>=3.3.0",
    "scipy>=1.5.0",
    "zeroconf>=0.38.0",
    "netifaces>=0.11.0",
    "msgpack>=1.0.2",
    "pyyaml>=6.0",
    "tqdm>=4.60.0",
]

[project.urls]
Homepage = "https://github.com/unlook/unlook-sdk"
Repository = "https://github.com/unlook/unlook-sdk"
Documentation = "https://unlook-sdk.readthedocs.io/"
"Bug Tracker" = "https://github.com/unlook/unlook-sdk/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=20.8b1",
    "flake8>=3.8",
    "mypy>=0.782",
]
docs = [
    "sphinx>=5.0.0,<7.0.0",
    "sphinx_rtd_theme>=1.2.0",
    "sphinx-copybutton>=0.5.0",
    "myst-parser>=0.18.0",
]
3d = [
    "open3d>=0.15.0",
    "trimesh>=3.9.0",
    "pymeshlab>=2021.7",
    "h5py>=3.1.0",
]
server = [
    "smbus2>=0.4.1",
    "RPi.GPIO>=0.7.0",
    "picamera2>=0.3.0",
    "adafruit-circuitpython-busdevice>=5.0.0",
    "adafruit-circuitpython-register>=1.9.0",
    "AS1170-Python>=0.1.0",
]
cv = [
    "opencv-contrib-python>=4.5.0",
]
gpu = [
    "cupy",  # User should install appropriate CUDA version: cupy-cuda11x or cupy-cuda12x
]
nn = [
    "tensorflow>=2.11.0",
    "torch>=2.0.0",
    "torchvision>=0.16.0",
    "tensorboard>=2.11.0",
]
handpose = [
    "mediapipe>=0.10.0",
]

[project.scripts]
unlook-scanner = "unlook.client.cli:main"
unlook-server = "unlook.server.cli:main"

[build-system]
requires = ["setuptools>=65", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages.find]
include = ["unlook*"]
exclude = ["tests*", "docs*", "examples*"]

[tool.setuptools.package-data]
unlook = [
    "calibration/**/*",
    "scanning_modules/*",
]

[tool.black]
line-length = 88
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  __pycache__
  | \.git
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
pythonpath = ["."]

[tool.coverage.run]
branch = true
source = ["unlook"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug:",
    "if settings\\.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]